global float $RGBValues[];
global proc SelectColor(){//returns RGBValues [] 
    global float $RGBValues[];
    colorEditor;   
 if (`colorEditor -query -result`) {
    $RGBValues = `colorEditor -query -rgb`;
    }
//return $RGBValues;
}

global proc ColorControl(string $item){
   // $RGBValues = `colorEditor -query -rgb`;
   global float $RGBValues[];
   print $RGBValues;
    setAttr ($item + ".overrideEnabled") 1;
    setAttr ($item + ".overrideRGBColors") 1;
    setAttr ($item + ".overrideColorRGB") $RGBValues[0] $RGBValues[1] $RGBValues[2];
    }
    
global proc Rename(string $Ctrl, string $item){   
        string $Tokenizer[];
        tokenize $item "_" $Tokenizer; 
        string $NewName;
        for($i = 0; $i <size($Tokenizer) - 1; $i++){
            $NewName += ($Tokenizer[$i]+"_");                
       }
       string $CtrlStuff = ($NewName + "Ctrl"); 
       rename $Ctrl $CtrlStuff;
       group -name ($CtrlStuff + "_Grp");
       matchTransform ($CtrlStuff + "_Grp") $item;  
    }



global proc CreateControls(){//Final Button push Proc. 
    string $SelectedObject[] = `ls -selection`;    
    
    
    if(`optionMenu -query -v Shape` == "Circle"){ 
        for($item in $SelectedObject)
        {
            //assign circle to a variable.
            string $CircleShape[];         
            $CircleShape = `circle -center 0 0 0 -normal 0 1 0 -sw 360 -radius 1 -degree 3 -sections 8`;
            ColorControl($CircleShape[0]);
            Rename($CircleShape[0], $item);           
        }
            if(`optionMenu -query -v Shape` == "Circle"){
            if(size ($SelectedObject) <= 0){                    
            circle -center 0 0 0 -normal 0 1 0 -sw 360 -radius 1 -degree 3 -sections 8;            
        }                 
    }
    }
    
    else if(`optionMenu -query -v Shape` == "Square"){ 
        for($item in $SelectedObject)
        {
            //assign circle to a variable.
            string $BezierShape;         
            $BezierShape = `curve -bezier -d 3 -p -1 0 1 -p -1 0 1 -p -1 0 -1 -p -1 0 -1 -p -1 0 -1 -p 1 0 -1 -p 1 0 -1 -p 1 0 -1 -p 1 0 1 -p 1 0 1 -p 1 0 1 -p -1 0 1 -p -1 0 1 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 -k 2 -k 2 -k 2 -k 3 -k 3 -k 3 -k 4 -k 4 -k 4`;
            ColorControl($BezierShape);
            Rename($BezierShape, $item);           
        }
            if(`optionMenu -query -v Shape` == "Square"){
            if(size ($SelectedObject) <= 0){                    
            curve -bezier -d 3 -p -1 0 1 -p -1 0 1 -p -1 0 -1 -p -1 0 -1 -p -1 0 -1 -p 1 0 -1 -p 1 0 -1 -p 1 0 -1 -p 1 0 1 -p 1 0 1 -p 1 0 1 -p -1 0 1 -p -1 0 1 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 -k 2 -k 2 -k 2 -k 3 -k 3 -k 3 -k 4 -k 4 -k 4;            
        }                 
    }
    } 
    
    else if(`optionMenu -query -v Shape` == "Corner"){ 
        for($item in $SelectedObject)
        {
            //assign circle to a variable.
            string $BezierShape;         
            $BezierShape = `curve -bezier -d 3 -p 0 0 -1 -p 0 0 -1 -p -1 0 0 -p -1 0 0 -p -1 0 0 -p 0 0 1 -p 0 0 1 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 -k 2 -k 2 -k 2`;
            ColorControl($BezierShape);
            Rename($BezierShape, $item);           
        } 
            if(`optionMenu -query -v Shape` == "Corner"){
            if(size ($SelectedObject) <= 0){                    
            curve -bezier -d 3 -p 0 0 -1 -p 0 0 -1 -p -1 0 0 -p -1 0 0 -p -1 0 0 -p 0 0 1 -p 0 0 1 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 -k 2 -k 2 -k 2;
            
        }                
    } 
    }
    
    else if(`optionMenu -query -v Shape` == "Arc"){ 
        for($item in $SelectedObject)
        {
            //assign circle to a variable.
            string $CircleShape[];         
            $CircleShape = `circle -center 0 0 0 -normal 0 1 0 -sw 180 -radius 1 -degree 3 -sections 8`;
            ColorControl($CircleShape[0]);
            Rename($CircleShape[0], $item);           
        }
            if(`optionMenu -query -v Shape` == "Arc"){
            if(size ($SelectedObject) <= 0){                    
            circle -center 0 0 0 -normal 0 1 0 -sw 180 -radius 1 -degree 3 -sections 8;            
        }                 
    } 
    }
    
    else if(`optionMenu -query -v Shape` == "Diamond"){ 
        for($item in $SelectedObject)
        {
            //assign circle to a variable.
            string $BezierShape;         
            $BezierShape = `curve -bezier -d 3 -p -1 0 0 -p -1 0 0 -p -0.590989 0 -0.202351 -p -0.394499 0 -0.398796 -p -0.198009 0 -0.595242 -p 0 0 -1 -p 0 0 -1 -p 0 0 -1 -p 0.210344 0 -0.597296 -p 0.412258 0 -0.39169 -p 0.614172 0 -0.186084 -p 1 0 0 -p 1 0 0 -p 1 0 0 -p 0.631462 0 0.174426 -p 0.40628 0 0.40159 -p 0.181098 0 0.628753 -p 0 0 1 -p 0 0 1 -p 0 0 1 -p -0.203337 0 0.582577 -p -0.39392 0 0.389832 -p -0.584502 0 0.197086 -p -1 0 0 -p -1 0 0 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 -k 2 -k 2 -k 2 -k 3 -k 3 -k 3 -k 4 -k 4 -k 4 -k 5 -k 5 -k 5 -k 6 -k 6 -k 6 -k 7 -k 7 -k 7 -k 8 -k 8 -k 8`;
            ColorControl($BezierShape);
            Rename($BezierShape, $item);           
        }
            if(`optionMenu -query -v Shape` == "Diamond"){
            if(size ($SelectedObject) <= 0){                    
            curve -bezier -d 3 -p -1 0 0 -p -1 0 0 -p -0.590989 0 -0.202351 -p -0.394499 0 -0.398796 -p -0.198009 0 -0.595242 -p 0 0 -1 -p 0 0 -1 -p 0 0 -1 -p 0.210344 0 -0.597296 -p 0.412258 0 -0.39169 -p 0.614172 0 -0.186084 -p 1 0 0 -p 1 0 0 -p 1 0 0 -p 0.631462 0 0.174426 -p 0.40628 0 0.40159 -p 0.181098 0 0.628753 -p 0 0 1 -p 0 0 1 -p 0 0 1 -p -0.203337 0 0.582577 -p -0.39392 0 0.389832 -p -0.584502 0 0.197086 -p -1 0 0 -p -1 0 0 -k 0 -k 0 -k 0 -k 1 -k 1 -k 1 -k 2 -k 2 -k 2 -k 3 -k 3 -k 3 -k 4 -k 4 -k 4 -k 5 -k 5 -k 5 -k 6 -k 6 -k 6 -k 7 -k 7 -k 7 -k 8 -k 8 -k 8;
            
        }                 
    }
    }
    
    else if(`optionMenu -query -v Shape` == "Assign Shape"){ 
        print "No Shape Selected";         
    }                                  
}       
        
string $mainWindow = "Controller Creator";
    if (`window -exists $mainWindow`)
    {
        deleteUI $mainWindow;
    }
        
$window = `window -title "Controller Creator" //look into dockControl 
       -widthHeight 300 200`;
    columnLayout-adjustableColumn true;
    optionMenu -width 100 -label "Shape Selection" Shape;
            menuItem -label "Assign Shape";
            menuItem -label "Circle";
            menuItem -label "Square"; 
            menuItem -label "Corner";
            menuItem -label "Arc";
            menuItem -label "Diamond";

    button -label "Select Color" -command "SelectColor";//Calls a procedure on click. 
    button -label "Create Controls" -command "CreateControls";
    
showWindow $window;
